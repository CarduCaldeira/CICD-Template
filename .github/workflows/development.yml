name: CI Workflow

on:
  pull_request:
      branches:
        - main 
jobs:
  web-instance:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR source branch
        run: |
          if [ "${{ github.head_ref }}" != "development" ]; then
            echo "Pull requests to main are only allowed from the development branch."
            exit 1
          fi
          
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Python packages
        id: cache-python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_jarvis.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_jarvis.txt  

      - name: Execute instance setup script
        env:
          TOKEN_JARVIS: ${{ secrets.TOKEN_JARVIS }}
          INSTANCE_NAME: ${{ vars.INSTANCE_NAME }}
          SCRIPT_NAME: ${{ vars.SCRIPT_NAME }}
        run: |
          python apiclient.py run_instance
    timeout-minutes: 5
    
  self-hosted-task:
    runs-on: self-hosted
    needs: web-instance
    steps:
      - uses: actions/checkout@v4

      - name: Install the project
        run: uv sync 

      - name: Run tests
        run: uv run pytest
    timeout-minutes: 5

  pause-instance:
    runs-on: ubuntu-latest
    if: ${{ always()}}
    needs: [web-instance, self-hosted-task]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Python packages
        id: cache-python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_jarvis.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_jarvis.txt  

      - name: Execute instance setup script
        env:
          TOKEN_JARVIS: ${{ secrets.TOKEN_JARVIS }}
          INSTANCE_NAME: ${{ vars.INSTANCE_NAME }}
        run: |
          python apiclient.py stop_instance
